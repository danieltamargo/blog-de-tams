---
import BackgroundPattern from '@components/BackgroundPattern.astro';
import Header from '@components/Header.astro';
import Footer from '@components/Footer.astro';
import { ClientRouter, fade } from 'astro:transitions';
import CardDani from '@components/CardDani.astro';
import Ratings from '@components/Ratings.astro';
import Blob from '@components/Blob.astro';

interface Props {
	title: string;
  mainWidth?: string;
  mainMaxWidth?: string;
	showInfo?: boolean;
  showRatings?: boolean;
}

const { title, mainWidth = "w-4xl", mainMaxWidth = "max-w-full", showInfo = true, showRatings = false } = Astro.props;
---
<!doctype html>
<html lang="es">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="A modern developer blog" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<ClientRouter />
	</head>
	<body class="min-h-svh w-screen bg-gray-50 overflow-x-hidden">
		<BackgroundPattern transition:animate={fade({ duration: '0' })} />
    <Blob />

		<Header />
		<div class="flex flex-col items-center xl:items-start xl:flex-row xl:flex-wrap xl:justify-center gap-6 max-w-[100svw] w-7xl py-12 px-6 mx-auto">
      <!-- Personal card aside -->
			{showInfo && <CardDani />}
	
			<main class:list={[mainMaxWidth, mainWidth]}>
				<slot />
			</main>

      <div class="hidden border-4 border-blue-500"></div>
		</div>
    
    {showRatings && <Ratings transition:animate={fade({ duration: '0' })} />}

		<Footer transition:animate={fade({ duration: '0' })} />
	</body>
</html>

<style is:global>
  .custom-notification-container {
    pointer-events: none;
    position: fixed;
    top: 0;
    right: 0;
    z-index: 1000;
    
    width: 80vw;
    max-width: 400px;
    padding: 1rem;
    
    overflow: hidden;
    
    display: flex;
    flex-direction: column;
    gap: 1rem;
    
    --progress-bar-height: 5px;
    --custom-notification-duration: 5000ms;
  }

  .custom-notification {
    border-radius: 4px;
    background-color: white;
    box-shadow: 0 0 8px black;
    color: #2f2f2f;
    position: relative;
    padding-bottom: var(--progress-bar-height);
    opacity: 1;
    overflow: hidden;
    
    animation: custom-notification-dismiss var(--custom-notification-duration) cubic-bezier(0, 1.16, 0.9, 1);
  }

  .alert-content {
    padding: 1rem;
  }

  .alert-content h3 {
    font-weight: 700;
    padding-bottom: 1rem;
  }

  .custom-notification.info {
    --progress-bar-color: darkblue;
  }
  .custom-notification.success {
    --progress-bar-color: green;
  }
  .custom-notification.warning {
    --progress-bar-color: darkorange;
  }
  .custom-notification.error {
    --progress-bar-color: darkred;
  }

  .custom-notification::after {
    content: " ";
    position: absolute;
    bottom: 0;
    width: 100%;
    height: var(--progress-bar-height);
    background-color: var(--progress-bar-color);
    
    animation-name: custom-notification-progress-bar;
    animation-fill-mode: forwards;
    animation-duration: var(--custom-notification-duration);
    animation-timing-function: cubic-bezier(0.39, 0.575, 0.565, 1);
  }

  #algorithm-results {
    margin-top: 2rem;
    padding: 1rem 0;
    
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    
    overflow: hidden;
    
    transform: scaleY(0);
    transform-origin: top;
    
    &.show {
      transition: transform 500ms;
      transform: scaleY(1);
    }
    
    & .ar-card {
      flex: 1 1 150px;

      animation-name: algorithm-result-card;
      animation-duration: 1200ms;
      animation-timing-function: cubic-bezier(0.075, 0.82, 0.165, 1);
      animation-fill-mode: forwards;
      --animation-initial-bg-color: rgb(124, 124, 160);
      --animation-final-bg-color: #f5f5f5;

      background-color: var(--animation-final-bg-color);
      background: linear-gradient(
        180deg,
        white 0%,
        var(--animation-final-bg-color) 100%
      );

      transition: filter 500ms;

      /* &.total-cost {
        --animation-initial-bg-color: rgb(85, 187, 153);
        --animation-final-bg-color: aquamarine;
      } */
      
      &:nth-child(2) {
        animation-delay: 100ms;
      }
      &:nth-child(3) {
        animation-delay: 200ms;
      }
      &:nth-child(4) {
        animation-delay: 300ms;
      }

      &:hover {
        filter: brightness(0.9);
      }
    }
  }

  @keyframes custom-notification-progress-bar {
    0% {
      width: 100%;
    }
    
    90% {
      width: 0%;
    }
    
    100% {
      width: 0%;
    }
  }

  @keyframes custom-notification-dismiss {
    0% {
      opacity: 0;
      transform: translateX(100%);
    }
    
    15% {
      opacity: 1;
      transform: translateX(0);
    }
    
    90% {
      opacity: 1;
    }
    
    100% {
      opacity: 0;
    }
  }
</style>

<script type="module">
  import { CustomNotificationManager } from "/src/utils/custom-notification-manager.js";
  window.CustomNotificationManager = new CustomNotificationManager();
</script>

<style is:global>
	body {
		scrollbar-gutter: stable both-edges;
		display: grid;
		grid-template-rows: auto 1fr auto;
		grid-template-columns: 1fr;	
	}

  hr {
    margin: 1rem 0 !important;
  }

  .screen-block {
    @apply backdrop-blur-sm rounded-xl bg-white/90 shadow-sm border border-gray-100 hover:shadow-md transition-shadow;
  }

	@keyframes slide-from-left {
		from { transform: translateX(-100%); opacity: 0; }
		to { transform: translateX(0); opacity: 1; }
	}

	@keyframes slide-from-right {
		from { transform: translateX(100%); opacity: 0; }
		to { transform: translateX(0); opacity: 1; }
	}
</style>

<style is:global>
  pre::-webkit-scrollbar {
    background-color: #24292e;
    border-radius: 0.25rem;
    height: 10px;
  }
  
  pre::-webkit-scrollbar-thumb {
    background-color: #808080;
    border-radius: 0.25rem;
  }
  
  pre::-webkit-scrollbar-track {
    background-color: #24292e;
    border-radius: 0.25rem;
  }
  
  /* pre {
    scrollbar-color: #808080 #24292e;
    scrollbar-width: auto;
  } */
  
  pre .line {
    white-space: pre !important;
  }
</style>