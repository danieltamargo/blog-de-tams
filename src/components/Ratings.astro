---
const ratings = [
  {
    user: 'John Doe',
    score: 4,
    review: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ut purus eget sapien.'
  },
  {
    user: 'Jane Doe',
    score: 5,
    review: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ut purus eget sapien.'
  },
  {
    user: 'John Smith',
    score: 3,
    review: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ut purus eget sapien.'
  },
]

---
<div 
class="backdrop-blur-sm border-gray-100 py-8 bg-white blob-hoverable" 
transition:persist>
  <div id="ratings-container">
    <div id="ratings-list">
      {ratings.map((rating) => (
        <div class="max-w-72 rating">
          <p class="text-gray-500">
            <span class="font-bold">{rating.user}</span>
          </p>
          <p class="text-gray-500">{rating.review}</p>

          <span class="flex items-center text-gray-500 score">
            {Array.from({ length: rating.score }).map((_, index) => (
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="24"
                height="24"
                viewBox="0 0 24 24"
                fill="currentColor"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
              >
                <path d="M14.792 17.063c0 .337 .057 .618 .057 .9c0 1.8 -1.238 3.037 -2.982 3.037c-1.8 0 -2.98 -1.238 -2.98 -3.206v-.731c-.957 .675 -1.576 .9 -2.42 .9c-1.518 0 -2.925 -1.463 -2.925 -3.094c0 -1.181 .844 -2.194 2.082 -2.756l.28 -.113c-1.574 -.787 -2.362 -1.688 -2.362 -2.925c0 -1.687 1.294 -3.094 2.925 -3.094c.675 0 1.52 .338 2.138 .788l.281 .112c0 -.337 -.056 -.619 -.056 -.844c0 -1.8 1.237 -3.037 2.98 -3.037c1.8 0 2.981 1.237 2.981 3.206v.394l-.056 .281c.956 -.675 1.575 -.9 2.419 -.9c1.519 0 2.925 1.463 2.925 3.094c0 1.181 -.844 2.194 -2.081 2.756l-.282 .169c1.575 .787 2.363 1.688 2.363 2.925c0 1.688 -1.294 3.094 -2.925 3.094c-.675 0 -1.575 -.281 -2.138 -.788l-.225 -.169z" />
              </svg>
            ))}
            {Array.from({ length: 5 - rating.score }).map((_, index) => (
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="24"
                height="24"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
              >
                <path d="M14.792 17.063c0 .337 .057 .618 .057 .9c0 1.8 -1.238 3.037 -2.982 3.037c-1.8 0 -2.98 -1.238 -2.98 -3.206v-.731c-.957 .675 -1.576 .9 -2.42 .9c-1.518 0 -2.925 -1.463 -2.925 -3.094c0 -1.181 .844 -2.194 2.082 -2.756l.28 -.113c-1.574 -.787 -2.362 -1.688 -2.362 -2.925c0 -1.687 1.294 -3.094 2.925 -3.094c.675 0 1.52 .338 2.138 .788l.281 .112c0 -.337 -.056 -.619 -.056 -.844c0 -1.8 1.237 -3.037 2.98 -3.037c1.8 0 2.981 1.237 2.981 3.206v.394l-.056 .281c.956 -.675 1.575 -.9 2.419 -.9c1.519 0 2.925 1.463 2.925 3.094c0 1.181 -.844 2.194 -2.081 2.756l-.282 .169c1.575 .787 2.363 1.688 2.363 2.925c0 1.688 -1.294 3.094 -2.925 3.094c-.675 0 -1.575 -.281 -2.138 -.788l-.225 -.169z" />
              </svg>
            ))}
          </span>
        </div>
      ))}
    </div>
  </div>
</div>
<style>
#ratings-container {
  overflow: hidden;
  position: relative;
  padding: 1rem 0;
  background-color: gainsboro;
  max-width: 100vw;
}
#ratings-container::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 40px;
  height: 100%;
  background: linear-gradient(to right, white, transparent);
  z-index: 1;
  pointer-events: none;
}
#ratings-container::after {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  width: 40px;
  height: 100%;
  background: linear-gradient(to left, white, transparent);
  z-index: 1;
  pointer-events: none;
}

#ratings-list {
  display: flex;
  flex-wrap: nowrap;
  gap: 4rem;

  width: max-content;
  animation: rating-scroll 40s linear infinite;
}

.rating {
  padding: 1rem;
  padding-top: 2rem;
  position: relative;
  background: white;
  border-radius: 1rem;
  box-shadow: 0 0 1rem rgba(0, 0, 0, 0.1);
  width: 20rem;
  max-width: 100%;
  transition: transform 0.4s ease-in-out;
}
.rating .score {
  position: absolute;
  top: 1rem;
  right: 1rem;
}

@keyframes rating-scroll {
  to {
    transform: translate(calc(-50% - 2rem));
  }
}
</style>
<script>
  const ratings = document.querySelectorAll<HTMLDivElement>('.rating');
  const ratingsList = document.getElementById('ratings-list');

  ratings.forEach((rating) => {
    const duplicatedRating = rating.cloneNode(true) as HTMLDivElement;
    duplicatedRating.setAttribute('aria-hidden', 'true');

    ratingsList.appendChild(duplicatedRating);
  })
</script>