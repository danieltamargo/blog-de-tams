---
import type { IPost } from '@interfaces/IPost';
import type { IAnimNew, IAnimOld } from '@interfaces/IViewTransitionAnimation';
import { format } from 'date-fns';
import { es } from 'date-fns/locale';

interface Props {
  prevPost: IPost,
  nextPost: IPost,
  frontmatter: IPost['data'],
  contentFolder: String,
  animation: {
    forwards: {
      old: IAnimOld,
      new: IAnimNew,
    },
    backwards: {
      old: IAnimOld,
      new: IAnimNew,
    },
  };
}

const { prevPost, nextPost, frontmatter, animation, contentFolder } = Astro.props;

let date = format(new Date(frontmatter.date), 'MMMM d, yyyy', { locale: es });
date = date.charAt(0).toUpperCase() + date.slice(1);
---

<article transition:animate={animation}>
  <div class="p-8 screen-block">
    <nav class="flex justify-between mb-8 text-sm">
      {prevPost && (
        <a 
          href={`/${contentFolder}/${prevPost.slug}`}
          rel="prev"
          class="flex items-center gap-2 text-gray-600 hover:text-gray-900 transition-colors"
        >
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="m15 18-6-6 6-6"/>
          </svg>
          <span class="hidden sm:inline">Anterior:</span>
          <span class="font-medium truncate max-w-[200px]">{prevPost.data.title}</span>
        </a>
      )}
      {!prevPost && <div></div>}
      
      {nextPost && (
        <a 
          href={`/${contentFolder}/${nextPost.slug}`}
          rel="next"
          class="flex items-center gap-2 text-gray-600 hover:text-gray-900 transition-colors"
        >
          <span class="hidden sm:inline">Siguiente:</span>
          <span class="font-medium truncate max-w-[200px]">{nextPost.data.title}</span>
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="m9 18 6-6-6-6"/>
          </svg>
        </a>
      )}
      {!nextPost && <div></div>}
    </nav>

    <div class="mb-8">
      <div class="text-gray-500">
        <time datetime={frontmatter.date}>
          {date}
        </time>
        {frontmatter.tags && (
          <div class="mt-2 flex gap-2 flex-wrap">
            {frontmatter.tags.map((tag: string) => (
              <span class="bg-gray-100/80 backdrop-blur-sm text-gray-700 px-3 py-1 rounded-full text-sm">
                {tag}
              </span>
            ))}
          </div>
        )}
      </div>
    </div>
    <div class="prose prose-lg max-w-none prose-headings:text-gray-900 prose-p:text-gray-700 prose-a:text-blue-600">
      <slot />
    </div>

    <nav class="flex justify-between mt-8 text-sm">
      {prevPost && (
        <a 
          href={`/${contentFolder}/${prevPost.slug}`}
          rel="prev"
          class="flex items-center gap-2 text-gray-600 hover:text-gray-900 transition-colors"
        >
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="m15 18-6-6 6-6"/>
          </svg>
          <span class="hidden sm:inline">Anterior:</span>
          <span class="font-medium truncate max-w-[200px]">{prevPost.data.title}</span>
        </a>
      )}
      {!prevPost && <div></div>}
      
      {nextPost && (
        <a 
          href={`/${contentFolder}/${nextPost.slug}`}
          rel="next"
          class="flex items-center gap-2 text-gray-600 hover:text-gray-900 transition-colors"
        >
          <span class="hidden sm:inline">Siguiente:</span>
          <span class="font-medium truncate max-w-[200px]">{nextPost.data.title}</span>
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="m9 18 6-6-6-6"/>
          </svg>
        </a>
      )}
      {!nextPost && <div></div>}
    </nav>
  </div>
</article>

<script>
import { navigate } from 'astro:transitions/client';

document.addEventListener("astro:page-load", () => {
  const nextLinks = document.querySelectorAll<HTMLLinkElement>('a[rel="next"]');
  const prevLinks = document.querySelectorAll<HTMLLinkElement>('a[rel="prev"]');
  
  nextLinks.forEach((link) => {
    link.addEventListener('click', (event) => {
      event.preventDefault();
      window.scrollTo(0, 0); // Al volver arriba evitamos que el scroll afecte a la navegación
      document.cookie = 'post-navigation-direction=forward;max-age=60';
      navigate(link.href);
    });
  });
  
  prevLinks.forEach((link) => {
    link.addEventListener('click', (event) => {
      event.preventDefault();
      window.scrollTo(0, 0); // Al volver arriba evitamos que el scroll afecte a la navegación
      document.cookie = 'post-navigation-direction=backward;max-age=60';
      navigate(link.href);
    });
  });
})
</script>
