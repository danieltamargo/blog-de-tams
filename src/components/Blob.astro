---

---

<div
  class="fixed top-0 left-0 w-full h-full overflow-hidden"
  transition:persist="blob"
>
  <div id="blurred-blob-that-follows-the-mouse-hehe" class="opacity-0">
    <!-- Inspired by Hyperplexed video -->
  </div>
</div>

<script>
  console.log("Blob!");
  const blob = document.getElementById(
    "blurred-blob-that-follows-the-mouse-hehe",
  );
  const initialBlobWidth = blob.offsetWidth;
  const initialBlobHeight = blob.offsetHeight;
  let blobCanMove = true;

  // Coordenadas del mouse
  let mouseX = 0;
  let mouseY = 0;

  const makeBlobAppear = () => {
    blob.classList.remove("opacity-0");
    window.removeEventListener("mousemove", makeBlobAppear);
  };

  window.addEventListener("mousemove", makeBlobAppear);

  window.addEventListener("mousemove", (evt) => {
    if (!blobCanMove) return;
    mouseX = evt.clientX;
    mouseY = evt.clientY;

    // https://developer.mozilla.org/es/docs/Web/API/Element/animate
    // https://developer.mozilla.org/en-US/docs/Web/API/KeyframeEffect
    blob.animate(
      [
        {
          left: `${mouseX}px`,
          top: `${mouseY}px`,
        },
      ],
      {
        duration: 1000,
        easing: "ease-in-out",
        fill: "forwards",
      },
    );
  });

  let blocks: NodeListOf<HTMLDivElement> | any = [];
  let hoveredElement = null;

  const blobBlockMouseEnter = ({ target }) => {
    blobCanMove = false;
    hoveredElement = target as HTMLDivElement;

    updateHovering({ animateDuration: 250, animationEasing: "ease-in-out" });
  };

  const blobBlockMouseLeave = (event: MouseEvent) => {
    blobCanMove = true;

    mouseX = event.clientX;
    mouseY = event.clientY;

    blob.animate(
      [
        {
          left: `${mouseX}px`,
          top: `${mouseY}px`,
          width: `${initialBlobWidth}px`,
          height: `${initialBlobHeight}px`,
        },
      ],
      {
        duration: 100,
        easing: "ease-in-out",
        fill: "forwards",
      },
    );
  };

  document.addEventListener("astro:page-load", () => {
    // Refrescar la lista de bloques a los que aplicar el hover, por si alguno ha persistido reseteamos el event listener
    blocks = document.querySelectorAll<HTMLDivElement>(".blob-hoverable");
    blocks.forEach((block: HTMLDivElement) => {
      block.removeEventListener("mouseenter", blobBlockMouseEnter);
      block.addEventListener("mouseenter", blobBlockMouseEnter);

      block.removeEventListener("mouseleave", blobBlockMouseLeave);
      block.addEventListener("mouseleave", blobBlockMouseLeave);
    });
  });

  const updateHovering = ({
    animateDuration = 10,
    animationEasing = "ease",
  }) => {
    if (!hoveredElement) return;

    const blockRect = hoveredElement.getBoundingClientRect();

    blob.animate(
      [
        {
          left: `${blockRect.left + blockRect.width / 2}px`,
          top: `${blockRect.top + blockRect.height / 2}px`,
          width: hoveredElement.offsetWidth + "px",
          height: hoveredElement.offsetHeight + "px",
          borderRadius: "2rem",
        },
      ],
      {
        duration: animateDuration,
        fill: "forwards",
        easing: animationEasing,
      },
    );
  };

  window.addEventListener("scroll", () => {
    if (!blobCanMove) {
      updateHovering({});
    }
  });
</script>

<style>
  #blurred-blob-that-follows-the-mouse-hehe {
    transition: opacity 1.5s;

    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);

    width: 100px;
    height: 100px;

    border-radius: 50%;
    filter: blur(20px);
    pointer-events: none;

    background: radial-gradient(circle, #a8d4f9, #d4a8f9, #a8f9d4, #f9d4a8);
    background-size: 200% 200%;
    animation: smooth-gradient 2s infinite alternate;
  }

  @keyframes smooth-gradient {
    0% {
      background-position: 0% 50%;
    }

    100% {
      background-position: 100% 50%;
    }
  }
</style>
